html,
body {
	margin: 0;
	padding: 0;
}

* {
	-webkit-tap-highlight-color: transparent;
	
	user-select: none;
	pointer-events: none;
	box-sizing: border-box;
	cursor: default;
}

$colorBgWrapper: #FFFFFF;

$colorPrimary: #424242;
$colorSecondary: #BDBDBD;
$colorAccent: #EF5450;

$duration: .3s;
$function: ease;


#body {
	width: 100vw;
	height: 100vh;
	align-items: center;
	justify-content: center;
	overflow: hidden;
	position: relative;
	display: flex;
}

.wrapper {
	width: 100%;
	height: 100%;
	max-height: 100vh;
	
	font-family: 'Roboto', sans-serif;
	font-size: .875rem;
	line-height: 1.5;
	
	color: $colorPrimary;
	background-color: $colorBgWrapper;
	
	position: relative;
	overflow: hidden;
	
	.header {
		padding-top: 1.25rem;
		
		.title {
			padding: 0 1.75rem;
			
			&-text {
				font-size: 1.25rem;
				font-weight: 700;
			}
		}
		
		.state {
			padding: .125rem 1.75rem;
			border-bottom: .25rem solid $colorSecondary;
			position: relative;
			
			&-text {
				font-size: .75rem;
				color: $colorAccent;
			}
			
			&-numb {
				margin-top: -1rem;
				margin-right: -.75rem;
				font-size: 1.25rem;
				text-align: right;
				color: $colorAccent;
				display: block;
				
				&:after {
					padding-left: .0625rem;
					content: '%';
					font-size: .875rem;
					opacity: .875;
				}
			}
			
			&-line {
				bottom: -.25rem;
				left: 0;
				height: .25rem;
				background-color: $colorAccent;
				position: absolute;
			}
		}
	}
	
	.side {
		padding-top: .375rem;
		padding-right: .5rem;
		padding-left: 1.5rem;
		display: flex;
		
		.search {
			margin-right: 1rem;
			width: 100%;
			align-items: center;
			display: flex;
			
			&-input {
				padding: .5rem 0;
				width: 100%;
				
				color: $colorPrimary;
				background: none;
				outline: none;
				border: none;
				
				border-bottom: .0625rem solid rgba($colorSecondary, .5);
				transition: border-color $duration $function;
				
				pointer-events: all;
				cursor: text;
				
				&:hover,
				&:focus,
				&:not(:placeholder-shown) {
					border-color: $colorSecondary;
				}
			}
			&-button {
				margin-left: .5rem;
				padding: .5rem;
				
				font-size: .875rem;
				line-height: 1rem;
				transition: color $duration $function;
				
				pointer-events: all;
				position: relative;
				display: block;
				cursor: pointer;
				
				&:hover {
					color: rgba($colorPrimary, .75);
				}
			}
		}
		
		.filter {
			flex: 0 0 auto;
			display: flex;
			
			&-button {
				padding: .5rem;
				
				font-size: .75rem;
				line-height: 1rem;
				
				transition: color $duration $function;
				
				pointer-events: all;
				cursor: pointer;
				
				position: relative;
				display: block;
				
				z-index: 2;
				
				&:not(:first-child):before {
					top: .625rem;
					left: 0;
					height: .75rem;
					content: '';
					border-left: .0625rem solid $colorSecondary;
					position: absolute;
				}
				
				&:hover {
					color: rgba($colorPrimary, .75);
				}
				
				&.active {
					color: $colorAccent;
					pointer-events: none;
					cursor: default;
				}
			}
		}
	}
	
	.list {
		padding-bottom: .25rem;
		max-height: calc(100vh - 8rem);
		pointer-events: all;
		overflow-x: hidden;
		overflow-y: auto;
		
		&::-webkit-scrollbar {
			width: 0;
		}
		
		.group {
			margin-bottom: -.0625rem;
			padding: 1.5rem 1.5rem .75rem;
			background-color: $colorBgWrapper;
			position: relative;
			z-index: 1;
			
			&-text {
				font-size: .5rem;
				font-weight: 700;
				text-transform: uppercase;
				letter-spacing: .0625rem;
			}
		}
		
		.task {
			padding: 0 1rem;
			width: 100%;
			height: 2.5rem;
			
			align-items: center;
			justify-content: space-between;
			
			background-color: $colorBgWrapper;
			border-top: .0625rem solid transparent;
			border-color: rgba($colorSecondary, .1);
			transition: border-color $duration $function;
			
			pointer-events: all;
			position: relative;
			display: flex;
			
			&:hover,
			&:hover + .task {
				border-color: rgba($colorSecondary, .5);
			}
			
			&:hover {
				.task-mark {
					border-color: rgba($colorAccent, .5);
				}
				.task-status:after,
				.task-delete:after {
					color: rgba($colorSecondary, .75);
				}
			}
			
			&.important {
				.task-mark {
					border-color: $colorAccent;
					
					&:hover {
						border-color: rgba($colorAccent, .5);
					}
				}
			}
			
			&.completed {
				.task-status {
					&:before {
						background-color: $colorAccent;
						border-color: $colorAccent;
					}
					&:after {
						color: $colorBgWrapper;
					}
				}
				.task-text {
					color: $colorSecondary;
					text-decoration: line-through;
				}
				.task-mark {
					border-color: transparent;
				}
			}
			
			&-status {
				padding: .75rem;
				
				flex: 0 0 auto;
				position: relative;
				display: block;
				
				pointer-events: all;
				cursor: pointer;
				
				&:before {
					width: 1rem;
					height: 1rem;
					content: '';
					border: .0625rem solid $colorSecondary;
					border-radius: 50%;
					transition: background-color $duration $function,
					                border-color $duration $function;
					box-sizing: border-box;
					display: block;
				}
				
				&:after {
					top: 1.0625rem;
					left: 1rem;
					font-size: .5rem;
					color: $colorBgWrapper;
					transition: color $duration $function;
					position: absolute;
				}
			}
			
			&-text {
				padding: .75rem .5rem;
				width: 100%;
				line-height: 1rem;
				transition: color $duration $function;
				
				white-space: nowrap;
				text-overflow: ellipsis;
				overflow: hidden;
				
				pointer-events: all;
				cursor: text;
			}
			
			&-mark {
				top: 0;
				left: 0;
				width: 1rem;
				height: 100%;
				border-left: .125rem solid transparent;
				transition: border-width $duration $function,
				            border-color $duration $function;
				position: absolute;
				display: block;
				
				pointer-events: all;
				cursor: pointer;
				
				&:hover {
					border-left-width: .25rem;
				}
			}
			
			&-delete {
				padding: .9375rem;
				width: 2.5rem;
				height: 2.5rem;
				
				flex: 0 0 auto;
				position: relative;
				display: block;
				
				pointer-events: all;
				cursor: pointer;
				display: block;
				
				&:after {
					color: transparent;
					transition: color $duration $function;
					font-size: .625rem;
					display: block;
				}
				
				&:hover::after {
					color: $colorPrimary !important;
				}
			}
		}
	}
	
	.footer {
		.create {
			position: relative;
			
			&.open {
				.create-input {
					right: 3.5rem;
					width: 12rem;
				}
			}
			
			&-input {
				right: 2.1875rem;
				bottom: 2.125rem;
				padding: .375rem .5rem;
				padding-right: 1rem;
				width: 0;
				max-width: calc(100% - 6rem);
				
				color: $colorPrimary;
				background-color: $colorBgWrapper;
				border: .0625rem solid $colorSecondary;
				border-radius: .25rem 0 0 .25rem;
				outline: 0;
				
				transition: right $duration $function,
				            width $duration $function;
				
				pointer-events: all;
				cursor: text;
				
				position: fixed;
				z-index: 3;
			}
			
			&-button {
				right: 1.5rem;
				bottom: 1.5rem;
				padding: 1rem;
				
				font-size: .75rem;
				
				color: $colorBgWrapper;
				background-color: $colorAccent;
				border: .125rem solid transparent;
				border-radius: 50%;
				
				transition: color $duration $function,
				 background-color $duration $function,
				     border-color $duration $function;
				
				pointer-events: all;
				cursor: pointer;
				
				position: fixed;
				z-index: 4;
				
				&:hover {
					background-color: lighten($colorAccent, 10%);
				}
			}
		}
	}
}



@font-face {
	font-family: 'Roboto';
	src: url('../fonts/roboto-700-normal.woff2') format('woff2'),
	     url('../fonts/roboto-700-normal.woff') format('woff'),
	     url('../fonts/roboto-700-normal.ttf') format('truetype');
	font-weight: 700;
	font-style: normal;
}
@font-face {
	font-family: 'Roboto';
	src: url('../fonts/roboto-500-normal.woff2') format('woff2'),
	     url('../fonts/roboto-500-normal.woff') format('woff'),
	     url('../fonts/roboto-500-normal.ttf') format('truetype');
	font-weight: 500;
	font-style: normal;
}
@font-face {
	font-family: 'Roboto';
	src: url('../fonts/roboto-400-normal.woff2') format('woff2'),
	     url('../fonts/roboto-400-normal.woff') format('woff'),
	     url('../fonts/roboto-400-normal.ttf') format('truetype');
	font-weight: 400;
	font-style: normal;
}

@font-face {
	font-family: 'Icon';
	src: url('../icons/icon.eot');
	src: url('../icons/icon.eot#iefix') format('embedded-opentype'),
	     url('../icons/icon.ttf') format('truetype'),
	     url('../icons/icon.woff') format('woff'),
	     url('../icons/icon.svg#icon') format('svg');
	font-weight: normal;
	font-style: normal;
}

[class^="icon-"], [class*=" icon-"] {
	font-family: 'Icon' !important;
	-webkit-font-smoothing: antialiased;
	-moz-osx-font-smoothing: grayscale;
	line-height: 1;
}

.icon-plus:after {
  content: "\e900";
}
.icon-edit:after {
  content: "\e901";
}
.icon-bin:after {
  content: "\e902";
}
.icon-search:after {
  content: "\e903";
}
.icon-check:after {
  content: "\e904";
}
.icon-close:after {
  content: "\e905";
}
